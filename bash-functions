# vim: syntax=sh
function abort {
	if [ ! -z "$1" ]; then
		echo $@ >&2
	fi
	exit 1
}

function die {
	abort "$@"
}

function waitforpid {
    for pid in "$@"; do
        while kill -0 "$pid" 2>/dev/null; do
            sleep 0.5
        done
    done
}

function color {
	SEDEXP=sed
	if which gsed &> /dev/null; then
		SEDEXP=gsed
	fi
	if [ ! -z "$1" ] && [ -f "$1" ]; then
		color < $1
	else
		${SEDEXP} -e 's/^.*$/\x1b[41m\x1b[37m&\x1b[0m/'
	fi
}

#enable bash completion for this
complete -c wcat
function wcat {
	if [ "$1" = "-h" ] || [ -z "$1" ]; then
		echo "Usage: $0 [-l|-v] COMMAND [VIMOPTS]"
		echo "Print contents of file matching COMMAND"
		echo
		echo "  -l  Use less instead of cat"
		echo '  -v  Use vim instead of cat; append VIMOPTS to vim invocation'
		echo "  -h  This help"
		return 0
	elif [ "$1" = "-l" ]; then
		cmdname=less
		shift
	elif [ "$1" = "-v" ]; then
		cmdname=vim
		shift
	else
		cmdname=cat
	fi

	if [ "$(type -t "$1")" != "file" ]; then
		type "$1"
		return 1
	elif ! which "$1" &> /dev/null; then
		echo "'$1' not found, exiting"
		return 1
	else
		command="$1"
		shift
		"$cmdname" "$(which "$command")" $@
	fi
}

# need to write waitforfile at some point

if hash cheat 2> /dev/null; then
  function cheat {
    if [ "$#" -eq 2 ] && [[ ! $2 = --* ]]; then
      #echo "cheat $1 | egrep $2"
      command cheat "$1" | egrep "$2"
    else
      #echo "cheat $@"
      command cheat "$@"
    fi
  }
fi

if hash busctl 2> /dev/null; then
  function shutdown {
    if [ "$1" = "--help" ]; then
      /sbin/shutdown --help
      echo "  -w             Display time of a pending shutdown (helpers addition)"
    elif [ "$1" = "-w" ]; then
      awk -f - <<'ENDAWK' 
        BEGIN {
        "busctl get-property org.freedesktop.login1 /org/freedesktop/login1 org.freedesktop.login1.Manager ScheduledShutdown" | getline result
        split(result,results)
        results[3]/=1000000
        if (results[3] != 0)
                print "Shutdown scheduled for " strftime("%a %Y-%m-%d %T %Z",results[3],0) ", use 'shutdown -c' to cancel."
}
ENDAWK
    else
      /sbin/shutdown $@
    fi
  }
fi
